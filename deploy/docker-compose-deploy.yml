services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    container_name: iis_backend
    ports:
      - 8000:8000
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    # ASGI server
    # command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    # WSGI server
    # command: ["gunicorn", "  main:app", "--worker-class", "uvicorn.workers.UvicornWorker", "--bind", "0.0.0.0:8000"]
    command: ['./.entrypoint.sh']
    networks:
      - iis_network
    environment:
      DATABASE_URL: ${DB_DEPLOY}

  prometheus:
    image: prom/prometheus
    container_name: iis_prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - iis_network

  postgresql_exporter:
    image: prom/postgresql_exporter
    container_name: iis_postgresql_exporter
    environment:
      DATA_SOURCE_NAME: ${DB_DEPLOY}
    networks:
      - iis_network
    depends_on:
      db:
        condition: service_healthy
