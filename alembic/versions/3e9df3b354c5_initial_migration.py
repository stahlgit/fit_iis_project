"""Proto Models

Revision ID: e6b5c72a45c9
Revises: 3e9df3b354c5
Create Date: 2024-10-16 14:29:21.891173

"""
from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "3e9df3b354c5"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "conferences",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("genre", sa.String(), nullable=True),
        sa.Column("place", sa.String(), nullable=True),
        sa.Column("price", sa.Float(), nullable=True),
        sa.Column("capacity", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("role", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_table(
        "given_presentations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("conference_id", sa.Integer(), nullable=False),
        sa.Column("proposal", sa.String(), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["conference_id"],
            ["public.conferences.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["public.users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_table(
        "reservations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("number_of_tickets", sa.Integer(), nullable=False),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("paid", sa.Boolean(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("conference_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["conference_id"],
            ["public.conferences.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["public.users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_table(
        "rooms",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("capacity", sa.Integer(), nullable=True),
        sa.Column("conference_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["conference_id"],
            ["public.conferences.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_table(
        "lectures",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("tags", sa.String(), nullable=True),
        sa.Column("image", sa.String(), nullable=True),
        sa.Column("room_id", sa.Integer(), nullable=False),
        sa.Column("conference_id", sa.Integer(), nullable=False),
        sa.Column("lecturer_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["conference_id"], ["public.conferences.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["lecturer_id"], ["public.users.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["room_id"], ["public.rooms.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_table(
        "tickets",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("reservation_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["reservation_id"], ["public.reservations.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_table(
        "questions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("text", sa.Text(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("lecture_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["lecture_id"],
            ["public.lectures.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["public.users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_table(
        "voting",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("lecture_id", sa.Integer(), nullable=False),
        sa.Column("rating", sa.Integer(), nullable=False),
        sa.CheckConstraint("rating >= 1 AND rating <= 5", name="rating_check"),
        sa.ForeignKeyConstraint(
            ["lecture_id"],
            ["public.lectures.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["public.users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("voting", schema="public")
    op.drop_table("questions", schema="public")
    op.drop_table("tickets", schema="public")
    op.drop_table("lectures", schema="public")
    op.drop_table("rooms", schema="public")
    op.drop_table("reservations", schema="public")
    op.drop_table("given_presentations", schema="public")
    op.drop_table("users", schema="public")
    op.drop_table("conferences", schema="public")
    # ### end Alembic commands ###
