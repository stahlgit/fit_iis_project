services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    container_name: iis_backend
    ports:
      - 8000:8000
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    # ASGI server
    # command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    # WSGI server
    # command: ["gunicorn", "  main:app", "--worker-class", "uvicorn.workers.UvicornWorker", "--bind", "0.0.0.0:8000"]
    command: ['./.entrypoint.sh']
    networks:
      - iis_network
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/{POSTGRES_DB} # Use this to connect to the db service

  db:
    image: postgres:16.3-alpine
    container_name: iis_database
    env_file:
      - .env
    networks:
      - iis_network
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
      interval: 10s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

networks:
  iis_network:
    driver: bridge
    name: iis_network

volumes:
  pgdata:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './pgdata'
